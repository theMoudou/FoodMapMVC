@model FoodMapMVC.ORM.MapContent

@{
    ViewBag.Title = "Details";

    string title = this.Model?.Title ?? "新增";
    bool isEdit = (this.Model != null);

    string actName = isEdit ? "Edit" : "Create";
}

<h2>美食地圖管理</h2>

<form method="post" action="@Url.Action(actName, "FoodMapAdmin")">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>@title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CoverImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" name="Longitude" class="form-control" required="required" value="@this.Model.Longitude" />
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" name="Latitude" class="form-control" required="required" value="@this.Model.Latitude" />
                 @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <label>
                    IsEnable:
                    @Html.EditorFor(model => model.IsEnable)
                </label>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="儲存" class="btn btn-success" />
                &nbsp;
                <a href="@Url.Action("Index")" class="btn btn-danger">取消</a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
